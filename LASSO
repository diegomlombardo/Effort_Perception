% Predictors (without intercept term)
X = [X_norm, head_norm]; % [n_samples x (num_ROIs + 1)]

% Response
y = y_clean;


% Perform LASSO with 10-fold cross-validation to choose lambda
[B, FitInfo] = lasso(X, y, 'CV', 10);

% Plot MSE vs Lambda
lassoPlot(B, FitInfo, 'PlotType', 'CV');
xlabel('Log(\lambda)');
ylabel('Mean Squared Error (MSE)');
title('LASSO Cross-Validation');
grid on;

idxLambdaMinMSE = FitInfo.IndexMinMSE; % index of lambda with min MSE
bestLambda = FitInfo.Lambda(idxLambdaMinMSE);

coef = B(:, idxLambdaMinMSE); % coefficients at best lambda
intercept = FitInfo.Intercept(idxLambdaMinMSE);

fprintf('Best lambda selected: %.5f\n', bestLambda);

% Display non-zero coefficients (selected features)
selected = find(coef ~= 0);

fprintf('Selected predictors:\n');
for i = 1:length(selected)
    if selected(i) <= num_groups
        fprintf('ROI: %s, Coef = %.4f\n', group_names{selected(i)}, coef(selected(i)));
    else
        fprintf('Head Motion, Coef = %.4f\n', coef(selected(i)));
    end
end


% Predicted values on full dataset
y_pred_lasso = X * coef + intercept;

% Compute R²
SS_res = sum((y - y_pred_lasso).^2);
SS_tot = sum((y - mean(y)).^2);
R2_lasso = 1 - SS_res / SS_tot;

fprintf('LASSO R² on full data: %.4f\n', R2_lasso);
